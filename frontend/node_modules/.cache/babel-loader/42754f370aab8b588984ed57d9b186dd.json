{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhlvik001\\\\Documents\\\\LEARNING\\\\FullStack (Django_React)\\\\frontend\\\\src\\\\components\\\\ListItem.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet getTitle = note => {\n  let title = note.body.split('\\n')[0];\n\n  if (title.length > 45) {\n    return title.slice(0, 45);\n  }\n\n  return title;\n};\n\nlet getTime = note => {\n  return new Date(note.updated).toLocaleDateString();\n};\n\nconst ListItem = _ref => {\n  let {\n    note\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: `/note/${note.id}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-list-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: getTitle(note)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: getTime(note)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ListItem;\nexport default ListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"names":["React","Link","getTitle","note","title","body","split","length","slice","getTime","Date","updated","toLocaleDateString","ListItem","id"],"sources":["C:/Users/mhlvik001/Documents/LEARNING/FullStack (Django_React)/frontend/src/components/ListItem.js"],"sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nlet getTitle = (note) => {\r\n  let title = note.body.split('\\n')[0]\r\n  if (title.length > 45) {\r\n    return title.slice(0, 45)\r\n  }\r\n  return title\r\n}\r\n\r\nlet getTime  = (note) => {\r\n  return new Date(note.updated).toLocaleDateString()\r\n}\r\n\r\nconst ListItem = ({ note  }) => {\r\n  return (\r\n    <Link to={`/note/${note.id}`}>\r\n      <div className='notes-list-item'>\r\n        <h3>{getTitle(note)}</h3>\r\n        <p><span>{getTime(note)}</span></p>\r\n      </div>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default ListItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAGA,IAAIC,QAAQ,GAAIC,IAAD,IAAU;EACvB,IAAIC,KAAK,GAAGD,IAAI,CAACE,IAAL,CAAUC,KAAV,CAAgB,IAAhB,EAAsB,CAAtB,CAAZ;;EACA,IAAIF,KAAK,CAACG,MAAN,GAAe,EAAnB,EAAuB;IACrB,OAAOH,KAAK,CAACI,KAAN,CAAY,CAAZ,EAAe,EAAf,CAAP;EACD;;EACD,OAAOJ,KAAP;AACD,CAND;;AAQA,IAAIK,OAAO,GAAKN,IAAD,IAAU;EACvB,OAAO,IAAIO,IAAJ,CAASP,IAAI,CAACQ,OAAd,EAAuBC,kBAAvB,EAAP;AACD,CAFD;;AAIA,MAAMC,QAAQ,GAAG,QAAe;EAAA,IAAd;IAAEV;EAAF,CAAc;EAC9B,oBACE,QAAC,IAAD;IAAM,EAAE,EAAG,SAAQA,IAAI,CAACW,EAAG,EAA3B;IAAA,uBACE;MAAK,SAAS,EAAC,iBAAf;MAAA,wBACE;QAAA,UAAKZ,QAAQ,CAACC,IAAD;MAAb;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,uBAAG;UAAA,UAAOM,OAAO,CAACN,IAAD;QAAd;UAAA;UAAA;UAAA;QAAA;MAAH;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CATD;;KAAMU,Q;AAWN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}